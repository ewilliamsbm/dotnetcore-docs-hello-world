@page
@model IndexModel
@{    
    ViewData["Title"] = "Home page";
}

<style>
    body {
        margin: 0;
        padding: 0;
        overflow: hidden; /* Prevent scrolling */
        font-family: Arial, sans-serif;
    }
    canvas {
        display: block;
        margin: 0 auto;
        background-image: url('https://upload.wikimedia.org/wikipedia/en/thumb/2/27/Bliss_%28Windows_XP%29.png/270px-Bliss_%28Windows_XP%29.png');
        background-size: cover;
    }
    .info {
        text-align: center;
        font-size: 24px;
        color: #fff;
        text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);
    }
    #score {
        margin-top: 20px;
    }
</style>

<div class="info" id="title">FLAPPY COLEMAN</div>
<canvas id="gameCanvas" width="480" height="640"></canvas>
<div class="info" id="score">Score: <span id="scoreValue">0</span></div>

<script>
    // Get the canvas element and its context
    var canvas = document.getElementById("gameCanvas");
    var ctx = canvas.getContext("2d");

    // Define player image
    var playerImg = new Image();
    playerImg.onload = function () {
        draw();
    };
    playerImg.src = "https://i.ibb.co/T4f35nc/matthew.png";

    // Define player properties
    var player = {
        x: 50,
        y: canvas.height / 2 - 25, // Center vertically
        width: 50,
        height: 50,
        speedY: 0
    };

    // Define pipe properties
    var pipeGap = 200; // Gap between pipes
    var pipeWidth = 50;
    var pipes = [];
    var pipeSpeed = 2;
    var maxPipes = 3; // Maximum number of visible pipes
    var pipeInterval = 120; // Interval between pipes
    var lastPipeTime = 0;

    // Gravity
    var gravity = 0.5;

    // Score
    var score = 0;

    // Define game loop function
    function draw() {
        // Clear canvas
        ctx.clearRect(0, 0, canvas.width, canvas.height);

        // Draw player
        ctx.drawImage(playerImg, player.x, player.y, player.width, player.height);

        // Apply gravity to player
        player.speedY += gravity;
        player.y += player.speedY;

        // Keep player within canvas boundaries
        if (player.y <= 0) {
            player.y = 0;
            player.speedY = 0;
        }
        if (player.y >= canvas.height - player.height) {
            player.y = canvas.height - player.height;
            player.speedY = 0;
        }

        // Draw pipes
        for (var i = 0; i < pipes.length; i++) {
            var pipe = pipes[i];
            ctx.fillStyle = "#008000";
            ctx.fillRect(pipe.x, 0, pipeWidth, pipe.top);
            ctx.fillRect(pipe.x, pipe.top + pipeGap, pipeWidth, canvas.height - pipe.top - pipeGap);
            pipe.x -= pipeSpeed;

            // Check for collision
            if (player.x < pipe.x + pipeWidth && player.x + player.width > pipe.x &&
                (player.y < pipe.top || player.y + player.height > pipe.top + pipeGap)) {
                gameOver();
            }

            // Increment score if player passes pipe
            if (pipe.x + pipeWidth < player.x && !pipe.passed) {
                pipe.passed = true;
                score++;
                document.getElementById("scoreValue").textContent = score;
            }

            // Remove pipes that are off-screen
            if (pipe.x + pipeWidth < 0) {
                pipes.splice(i, 1);
                i--;
            }
        }

        // Generate new pipes
        if (Date.now() - lastPipeTime > pipeInterval) {
            lastPipeTime = Date.now();
            var pipeTopHeight = Math.floor(Math.random() * (canvas.height - pipeGap));
            pipes.push({ x: canvas.width, top: pipeTopHeight, passed: false });
        }

        // Draw score
        ctx.fillStyle = "#ffffff";
        ctx.font = "24px Arial";
        ctx.fillText("Score: " + score, 10, 30);

        // Request animation frame
        requestAnimationFrame(draw);
    }

    // Start the game loop
    draw();

    // Add event listener for spacebar to make player jump
    document.addEventListener("keydown", function (event) {
        if (event.keyCode === 32) { // Spacebar key code
            player.speedY = -8; // Adjust jump height as needed
        }
    });

    // Game over function
    function gameOver() {
        alert("Game Over. Your score is: " + score);
        location.reload(); // Reload the page to restart the game
    }
</script>
