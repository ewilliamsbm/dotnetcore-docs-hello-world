@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<!DOCTYPE html>
<html>
<head>
    <title>@ViewData["Title"] - Whack-a-Coleman</title>
    <style>
        body {
            font-family: 'Comic Sans MS', sans-serif;
            margin: 0;
            padding: 0;
            overflow: hidden;
            background: #000;
            text-align: center;
            color: #fff;
        }

        #gameCanvas {
            display: block;
            margin: auto;
            background: #222;
            border: 2px solid #fff;
        }

        #score {
            position: absolute;
            top: 10px;
            left: 10px;
            color: #fff;
            font-size: 20px;
        }

        #gameTitle {
            font-size: 40px;
            margin-top: 20px;
            margin-bottom: 20px;
        }
    </style>
</head>
<body>
    <div id="gameTitle">Whack-a-Coleman</div>
    <div id="score">Score: 0</div>
    <canvas id="gameCanvas" width="800" height="600"></canvas>

    <script>
        let canvas = document.getElementById("gameCanvas");
        let ctx = canvas.getContext("2d");

        let score = 0;
        let moleWidth = 100;
        let moleHeight = 100;
        let moles = [];
        let moleImage = new Image();
        moleImage.src = "https://i.ibb.co/8d2gTRR/matthew.png";
        let moleAppearTime = 1000; // Time mole stays visible in ms
        let moleInterval = 1500; // Time between moles appearing in ms
        let gameRunning = true;

        // Function to spawn a mole at a random position
        function spawnMole() {
            if (!gameRunning) return;
            let x = Math.random() * (canvas.width - moleWidth);
            let y = Math.random() * (canvas.height - moleHeight);
            moles.push({ x: x, y: y, appearedAt: Date.now() });

            setTimeout(spawnMole, moleInterval);
        }

        // Function to draw all active moles
        function drawMoles() {
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            let currentTime = Date.now();
            for (let i = 0; i < moles.length; i++) {
                if (currentTime - moles[i].appearedAt < moleAppearTime) {
                    ctx.drawImage(moleImage, moles[i].x, moles[i].y, moleWidth, moleHeight);
                } else {
                    moles.splice(i, 1);
                    i--;
                }
            }
        }

        // Function to check if the mole was hit
        function checkHit(x, y) {
            for (let i = 0; i < moles.length; i++) {
                if (
                    x >= moles[i].x &&
                    x <= moles[i].x + moleWidth &&
                    y >= moles[i].y &&
                    y <= moles[i].y + moleHeight
                ) {
                    moles.splice(i, 1);
                    score++;
                    document.getElementById("score").innerText = "Score: " + score;
                    return;
                }
            }
        }

        canvas.addEventListener("click", function (e) {
            let rect = canvas.getBoundingClientRect();
            let mouseX = e.clientX - rect.left;
            let mouseY = e.clientY - rect.top;
            checkHit(mouseX, mouseY);
        });

        function gameLoop() {
            drawMoles();
            requestAnimationFrame(gameLoop);
        }

        function startGame() {
            score = 0;
            document.getElementById("score").innerText = "Score: " + score;
            moles = [];
            gameRunning = true;
            spawnMole();
            gameLoop();
        }

        function stopGame() {
            gameRunning = false;
        }

        // Start the game
        startGame();
    </script>
</body>
</html>
